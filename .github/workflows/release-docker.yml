# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "dark error - Docker release"

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options: [info, warning, debug]
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64,arm

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      # Login ONLY for releases (no publish on push/PR)
      - if: ${{ github.event_name == 'release' }}
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Derive extra tags for releases (release tag + sanitized release name)
      - name: Derive release tags
        id: rel
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "release_tag=${{ github.event.release.tag_name }}" >> "$GITHUB_OUTPUT"
            name="${{ github.event.release.name }}"
            if [[ -n "$name" ]]; then
              slug=$(echo "$name" \
                | tr '[:upper:]' '[:lower:]' \
                | sed -E 's/[^a-z0-9_.-]+/-/g' \
                | sed -E 's/^-+|-+$//g' \
                | cut -c1-128)
              echo "release_name_slug=$slug" >> "$GITHUB_OUTPUT"
            fi
          fi

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # branch names
            type=ref,event=branch
            # semver (only for release)
            type=semver,pattern={{version}},enable=${{ github.event_name == 'release' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ github.event_name == 'release' }}
            # full sha
            type=sha,format=long
            # code tag (refs/tags/..)
            type=ref,event=tag
            # extra: release name (sanitized)
            type=raw,value=${{ steps.rel.outputs.release_name_slug }},enable=${{ steps.rel.outputs.release_name_slug != '' }}
            # extra: explicit release tag
            type=raw,value=${{ steps.rel.outputs.release_tag }},enable=${{ steps.rel.outputs.release_tag != '' }}
          flavor: |
            latest=auto

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: "{{defaultContext}}"
          sbom: true
          provenance: true
          platforms: linux/amd64,linux/arm64
          # Only publish on release; build-only on push/PR
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
